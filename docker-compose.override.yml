version: "3.8"

services:
  shopdb:
    container_name: shopdb
    image: postgis/postgis:12-master
    restart: on-failure
    volumes:
      - shopdb-data:/var/lib/postgresql/data
    networks:
      - shop_network
    expose:
      - 5432
    env_file: ./config/backend/shop/.env
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'dev_db'

  shop:
    container_name: shop
    env_file: ./config/backend/shop/.env
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./backend/shop:/code
      - ./config/backend/shop:/config
    environment:
      DJANGO_DEBUG: 1
      DATABASE_URL: 'postgresql://postgres:postgres@shopdb:5432/dev_db'
      DATABASE_HOST: 'shopdb'
    depends_on:
      - shopdb
    command: sh /runserver.sh


  warehousedb:
    container_name: warehousedb
    image: postgis/postgis:12-master
    restart: on-failure
    volumes:
      - warehousedb-data:/var/lib/postgresql/data
    networks:
      - warehouse_network
    expose:
      - 5432
    env_file: ./config/backend/warehouse/.env
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'dev_db'


  warehouse:
    container_name: warehouse
    env_file: ./config/backend/warehouse/.env
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./backend/warehouse:/code
      - ./config/backend/warehouse:/config
    networks:
      - nginx_network
      - app_network
      - warehouse_network
      - mailhog_network
    environment:
      DJANGO_DEBUG: 1
      DATABASE_URL: 'postgresql://postgres:postgres@warehouse:5432/dev_db'
      DATABASE_HOST: 'warehousedb'
    depends_on:
      - warehousedb
    command: sh /runserver.sh


  celery:
    container_name: celery
    env_file: ./config/backend/shop/.env
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./backend/shop:/code
      - ./config/backend/shop:/config
    networks:
      - shop_network
      - app_network
      - mailhog_network
    environment:
      C_FORCE_ROOT: 'true'
      DATABASE_URL: 'postgresql://postgres:postgres@shopdb:5432/dev_db'
      DATABASE_HOST: 'shopdb'
      DATABASE_PORT: '5432'
      REDIS_URL: 'redis://redis:6379/0'
      REDIS_CACHE: 'redis:6379'
      AMQP_URL: 'amqp://rabbitmq:5672'
      CHECK_WEB: 'true'
      WEB_HOST: 'shop'
      WEB_PORT: '8000'
    depends_on:
      - redis
      - shopdb
    command: celery -A shop worker -B -l INFO


  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    command: [ "-smtp-bind-addr", "0.0.0.0:25" ]
    user: root
    restart: on-failure
    networks:
      - nginx_network
      - mailhog_network
    expose:
      - 25
      - 8025


  nginx:
    container_name: nginx
    build:
      target: development_build
    ports:
      - 8025:8025
    depends_on:
      - mailhog


networks:
  warehouse_network:
  mailhog_network:

volumes:
  shopdb-data:
  warehousedb-data: